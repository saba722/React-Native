{"version":3,"sources":["BooksAPI.js","BookshelfChanger.js","Book.js","Bookshelf.js","ListBooks.js","SearchResults.js","SearchBooksInput.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","search","query","BookshelfChanger","state","value","props","handleChange","event","target","setState","onMove","className","this","onChange","disabled","Component","Book","style","width","height","backgroundImage","imageLinks","thumbnail","title","authors","join","Bookshelf","booksOnThisShelf","filter","key","name","map","ListBooks","bookshelves","to","SearchResults","searchBooks","myBooks","updatedBooks","b","SearchBooksInput","val","onSearch","type","placeholder","autoFocus","SearchBooks","onResetSearch","onClick","BooksApp","error","componentDidMount","BooksAPI","catch","err","console","log","moveBook","prevState","concat","searchForBooks","debounce","length","resetSearch","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.70eb3f55.chunk.js","sourcesContent":["const api = 'https://reactnd-books-api.udacity.com';\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token)\n  token = localStorage.token = Math.random()\n    .toString(36)\n    .substr(-8);\n\nconst headers = {\n  Accept: 'application/json',\n  Authorization: token,\n};\n\nexport const get = bookId =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ shelf }),\n  }).then(res => res.json());\n\nexport const search = query =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then(res => res.json())\n    .then(data => data.books);\n","import React, { Component } from 'react';\r\n\r\nclass BookshelfChanger extends Component {\r\n  state = {\r\n    value: this.props.shelf\r\n  };\r\n  handleChange = event => {\r\n    const { value } = event.target;\r\n    this.setState({ value });\r\n    this.props.onMove(this.props.book, value);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"book-shelf-changer\">\r\n        <select value={this.state.value} onChange={this.handleChange}>\r\n          <option value=\"move\" disabled>\r\n            Move to...\r\n          </option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookshelfChanger;\r\n","import React from 'react';\r\nimport BookshelfChanger from './BookshelfChanger';\r\n\r\nconst Book = ({ book, shelf, onMove }) => (\r\n  <li>\r\n    <div className=\"book\">\r\n      <div className=\"book-top\">\r\n        <div\r\n          className=\"book-cover\"\r\n          style={{\r\n            width: 128,\r\n            height: 193,\r\n            backgroundImage: `url(${\r\n              book.imageLinks\r\n                ? book.imageLinks.thumbnail\r\n                : 'icons/book-placeholder.svg'\r\n            })`\r\n          }}\r\n        />\r\n        <BookshelfChanger book={book} shelf={shelf} onMove={onMove} />\r\n      </div>\r\n      <div className=\"book-title\">{book.title}</div>\r\n      <div className=\"book-authors\">\r\n        {book.authors ? book.authors.join(', ') : 'Unknown Author'}\r\n      </div>\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default Book;\r\n","import React from 'react';\r\nimport Book from './Book';\r\n\r\nconst Bookshelf = props => {\r\n  const { shelf, books, onMove } = props;\r\n  const booksOnThisShelf = books.filter(book => book.shelf === shelf.key);\r\n  // console.log('booksOnThisShelf', booksOnThisShelf);\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{shelf.name}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {booksOnThisShelf.map(book => (\r\n            <Book key={book.id} book={book} shelf={shelf.key} onMove={onMove} />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bookshelf;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Bookshelf from './Bookshelf';\r\n\r\nclass ListBooks extends Component {\r\n  render() {\r\n    const { bookshelves, books, onMove } = this.props;\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            {bookshelves.map(shelf => (\r\n              <Bookshelf\r\n                key={shelf.key}\r\n                shelf={shelf}\r\n                books={books}\r\n                onMove={onMove}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to=\"search\">\r\n            <button>Add a Book</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListBooks;\r\n","import React from 'react';\r\nimport Book from './Book';\r\n\r\nconst SearchResults = props => {\r\n  const { searchBooks, myBooks, onMove } = props;\r\n\r\n  const updatedBooks = searchBooks.map(book => {\r\n    myBooks.map(b => {\r\n      if (b.id === book.id) {\r\n        book.shelf = b.shelf;\r\n      }\r\n      return b;\r\n    });\r\n    return book;\r\n  });\r\n  return (\r\n    <div className=\"search-books-results\">\r\n      <ol className=\"books-grid\">\r\n        {updatedBooks.map(book => (\r\n          <Book\r\n            key={book.id}\r\n            book={book}\r\n            shelf={book.shelf ? book.shelf : 'none'}\r\n            onMove={onMove}\r\n          />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from 'react';\r\n\r\nclass SearchBooksInput extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n  handleChange = event => {\r\n    // this.setState({ value: event.target.value });\r\n    const val = event.target.value;\r\n    this.setState({ value: val }, () => {\r\n      // console.log(val);\r\n      // if (val.length >= 1) {\r\n      this.props.onSearch(val);\r\n      // }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"search-books-input-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.value}\r\n          placeholder=\"Search by title or author\"\r\n          onChange={this.handleChange}\r\n          autoFocus\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBooksInput;\r\n","import React, { Component } from 'react';\r\nimport SearchResults from './SearchResults';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBooksInput from './SearchBooksInput';\r\n\r\nclass SearchBooks extends Component {\r\n  render() {\r\n    const {\r\n      searchBooks,\r\n      myBooks,\r\n      onSearch,\r\n      onResetSearch,\r\n      onMove\r\n    } = this.props;\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\">\r\n            <button className=\"close-search\" onClick={onResetSearch}>\r\n              Close\r\n            </button>\r\n          </Link>\r\n          <SearchBooksInput onSearch={onSearch} />\r\n        </div>\r\n        <SearchResults\r\n          searchBooks={searchBooks}\r\n          myBooks={myBooks}\r\n          onMove={onMove}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBooks;\r\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { debounce } from 'throttle-debounce';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport ListBooks from './ListBooks';\nimport SearchBooks from './SearchBooks';\n\nconst bookshelves = [\n  { key: 'currentlyReading', name: 'Currently Reading' },\n  { key: 'wantToRead', name: 'Want to Read' },\n  { key: 'read', name: 'Read' }\n];\nclass BooksApp extends Component {\n  state = {\n    myBooks: [],\n    searchBooks: [],\n    error: false\n  };\n  componentDidMount = () => {\n    BooksAPI.getAll()\n      .then(books => {\n        this.setState({ myBooks: books });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ error: true });\n      });\n  };\n  moveBook = (book, shelf) => {\n    BooksAPI.update(book, shelf).catch(err => {\n      console.log(err);\n      this.setState({ error: true });\n    });\n    if (shelf === 'none') {\n      this.setState(prevState => ({\n        myBooks: prevState.myBooks.filter(b => b.id !== book.id)\n      }));\n    } else {\n      book.shelf = shelf;\n      this.setState(prevState => ({\n        myBooks: prevState.myBooks.filter(b => b.id !== book.id).concat(book)\n      }));\n    }\n  };\n  searchForBooks = debounce(300, false, query => {\n    if (query.length > 0) {\n      BooksAPI.search(query).then(books => {\n        if (books.error) {\n          this.setState({ searchBooks: [] });\n        } else {\n          this.setState({ searchBooks: books });\n        }\n      });\n    } else {\n      this.setState({ searchBooks: [] });\n    }\n  });\n  resetSearch = () => {\n    this.setState({ searchBooks: [] });\n  };\n\n  render() {\n    const { myBooks, searchBooks, error } = this.state;\n    if (error) {\n      return <div>Network error. Please try again later.</div>;\n    }\n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <ListBooks\n              bookshelves={bookshelves}\n              books={myBooks}\n              onMove={this.moveBook}\n            />\n          )}\n        />\n        <Route\n          path=\"/search\"\n          render={() => (\n            <SearchBooks\n              searchBooks={searchBooks}\n              myBooks={myBooks}\n              onSearch={this.searchForBooks}\n              onMove={this.moveBook}\n              onResetSearch={this.resetSearch}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}